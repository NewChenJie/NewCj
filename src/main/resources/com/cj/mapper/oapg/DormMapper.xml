<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.mapper.oapg.DormMapper" >
  <resultMap id="BaseResultMap" type="com.cj.domain.oapg.Dorm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="dormclass" property="dormclass" jdbcType="INTEGER" />
    <result column="dormname" property="dormname" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="class2id" property="class2id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="states" property="states" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, dormclass, dormname, userid, class2id, phone, num, detail, addtime, states
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cj.domain.oapg.DormExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from dorm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dorm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dorm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cj.domain.oapg.DormExample" >
    delete from dorm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cj.domain.oapg.Dorm" >
    insert into dorm (id, dormclass, dormname, 
      userid, class2id, phone, 
      num, detail, addtime, 
      states)
    values (#{id,jdbcType=INTEGER}, #{dormclass,jdbcType=INTEGER}, #{dormname,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{class2id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{states,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cj.domain.oapg.Dorm" >
    insert into dorm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dormclass != null" >
        dormclass,
      </if>
      <if test="dormname != null" >
        dormname,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="class2id != null" >
        class2id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="states != null" >
        states,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dormclass != null" >
        #{dormclass,jdbcType=INTEGER},
      </if>
      <if test="dormname != null" >
        #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="class2id != null" >
        #{class2id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null" >
        #{states,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cj.domain.oapg.DormExample" resultType="java.lang.Integer" >
    select count(*) from dorm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dorm
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dormclass != null" >
        dormclass = #{record.dormclass,jdbcType=INTEGER},
      </if>
      <if test="record.dormname != null" >
        dormname = #{record.dormname,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.class2id != null" >
        class2id = #{record.class2id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.states != null" >
        states = #{record.states,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dorm
    set id = #{record.id,jdbcType=INTEGER},
      dormclass = #{record.dormclass,jdbcType=INTEGER},
      dormname = #{record.dormname,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      class2id = #{record.class2id,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      detail = #{record.detail,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      states = #{record.states,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.domain.oapg.Dorm" >
    update dorm
    <set >
      <if test="dormclass != null" >
        dormclass = #{dormclass,jdbcType=INTEGER},
      </if>
      <if test="dormname != null" >
        dormname = #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="class2id != null" >
        class2id = #{class2id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.domain.oapg.Dorm" >
    update dorm
    set dormclass = #{dormclass,jdbcType=INTEGER},
      dormname = #{dormname,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      class2id = #{class2id,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      states = #{states,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>